#1
=======================================================
str_slug()

#2,  Route::group(), Route::get('slug', [uses => 'controller', as => 'name']),
route('name', [slug => $someSlug]), Storage::url($url)
========================================== ==========================================
Route::group(['middleware' => 'auth'], function () {
    Route::get('profile/{slug}', [
        'uses' => 'ProfilesController@index',
        'as' => 'profile'
    ]);
});

<a href="{{ route('profile', ['slug' => Auth::user()->slug ]) }}">My profile</a>
<img src="{{ Storage::url($user->avatar) }}" height="70px" width="70px" alt="">

php artisan storage:link // in my case it wasn't necessary

#3, Relationship one to one
===========================================================
$this->hasOne(Profile::class)
$this->belongsTo(User::class)

#5,
===========================================================
//inside register controller to add a row inside profiles table. otherwise i got error
$user->profile()->create([]);
return $user;
//update through relation
auth()->user()->profile->update([
    'location' => request('location'),
    'about' => request('about')
]);
public function update(Request $r) {
    auth()->user()->profile->update([
        'location' => $r->location,
        'about' => $r->about
    ]);
}

#6 upload images
=======================================
//form attribute
enctype="multipart/form-data">
//avatar storage
if($r->hasFile('avatar')) {
    Auth::user()->update([
        'avatar' => $r->avatar->store('public/avatars')
    ]);
}

#8 using noty
==================================================
require('noty'); in bootstrap.js
and use noty in blade template
@if (Session::has('success'))
    noty({
        type: 'success',
        layout: 'bottomRight',
        text: "{{ Session::get('success') }}"
    });
@endif

#9 trait
==================================================
use App\Traits\Friendable;
    use Friendable;
//Friendable.php
namespace App\Traits
trait Friendable {
    public function hello() {
        return 'hello world'
    }
}

#10 Friendable trait
====================================================
response()->json($friendship, 200);
json('fail', 501);
















